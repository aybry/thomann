version: "3.9"

services:

  redis:
    container_name: thomann_redis
    image: redis
    ports:
      - "6379:6379"

  wsgi:
    container_name: thomann_wsgi
    build: .
    command: bash -c "python manage.py collectstatic --no-input && python manage.py migrate --noinput && gunicorn thomann.wsgi:application -b 0.0.0.0:8001"
    expose:
      - 8001
    volumes:
      - ~/tlh_backups:/home/backups
      - static_volume:/usrc/app/staticfiles
    environment:
      - DJANGO_SETTINGS_MODULE=thomann.settings.prod
      - THOMANN_DB_HOST=${DBHOST}
      - THOMANN_DB_PORT=${DBPORT}
      - THOMANN_DB_NAME=${DBNAME}
      - THOMANN_DB_SCHEMA=${DBSCHEMA}
      - THOMANN_DB_USERNAME=${DBUNAME}
      - THOMANN_DB_PASSWORD=${DBPASS}
      - THOMANN_SECRET_KEY=${THOMANN_SECRET_KEY}

  asgi:
    container_name: thomann_asgi
    build: .
    expose:
      - 8080
    command: daphne -e ssl:8080:privateKey=/etc/letsencrypt/live/lookup.ay-bryson.com/privkey.pem:certKey=/etc/letsencrypt/live/lookup.ay-bryson.com/cert.pem thomann.asgi:application
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - ./thomann/:/usr/src/app
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "8080:8080"
    environment:
      - DJANGO_SETTINGS_MODULE=thomann.settings.prod
      - THOMANN_DB_HOST=${DBHOST}
      - THOMANN_DB_PORT=${DBPORT}
      - THOMANN_DB_NAME=${DBNAME}
      - THOMANN_DB_SCHEMA=${DBSCHEMA}
      - THOMANN_DB_USERNAME=${DBUNAME}
      - THOMANN_DB_PASSWORD=${DBPASS}
      - THOMANN_SECRET_KEY=${THOMANN_SECRET_KEY}

  nginx:
    container_name: thomann_nginx
    image: nginx
    build:
      context: ./nginx
      network: host
    ports:
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      - asgi
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - ./nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

  certbot:
    container_name: thomann_certbot
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  static_volume:

